{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\my-app\\\\react-native\\\\components\\\\CreateMovies.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nexport default function CreateMovies(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      id = _useState2[0],\n      setID = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      title = _useState4[0],\n      setTitle = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      releaseYear = _useState6[0],\n      setReleaseYear = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      image = _useState8[0],\n      setImage = _useState8[1];\n\n  var onSubmit = function onSubmit() {\n    var data, promise, result;\n    return _regeneratorRuntime.async(function onSubmit$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            console.log(\"Press Submit !!!\");\n            data = {\n              \"id\": id,\n              \"title\": title,\n              \"releaseYear\": releaseYear,\n              \"image\": image\n            };\n            console.log(\"Submit : \", data);\n            _context.prev = 3;\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(fetch('https://www.csbootstrap.com/api/movies', {\n              method: 'POST',\n              body: JSON.stringify(data),\n              headers: {\n                'Content-Type': 'application/json'\n              }\n            }));\n\n          case 6:\n            promise = _context.sent;\n            _context.next = 9;\n            return _regeneratorRuntime.awrap(promise.json());\n\n          case 9:\n            result = _context.sent;\n            console.log(\"Result : \", result);\n            navigation.navigate('Movies');\n            _context.next = 17;\n            break;\n\n          case 14:\n            _context.prev = 14;\n            _context.t0 = _context[\"catch\"](3);\n            console.log(\"ERROR : \", _context.t0);\n\n          case 17:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[3, 14]], Promise);\n  };\n\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      justifyContent: 'flex-start',\n      padding: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, \"Create Movies\"), React.createElement(Text, {\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, \"ID : \"), React.createElement(TextInput, {\n    style: {\n      width: '90%',\n      padding: 10\n    },\n    autoCapitalize: \"none\",\n    placeholder: \"fill id with random character ...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }), React.createElement(Text, {\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, \"Title : \"), React.createElement(TextInput, {\n    style: {\n      width: '90%',\n      padding: 10\n    },\n    autoCapitalize: \"none\",\n    placeholder: \"movie title ...\",\n    onChangeText: function onChangeText(text) {\n      return setTitle(text);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }), React.createElement(Text, {\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, \"Release year : \"), React.createElement(TextInput, {\n    style: {\n      width: '90%',\n      padding: 10\n    },\n    autoCapitalize: \"none\",\n    placeholder: \"year ...\",\n    onChangeText: function onChangeText(text) {\n      return setReleaseYear(text);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }), React.createElement(Text, {\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, \"Image URL :  \"), React.createElement(TextInput, {\n    style: {\n      width: '90%',\n      padding: 10\n    },\n    autoCapitalize: \"none\",\n    placeholder: \"URL with https ....\",\n    onChangeText: function onChangeText(text) {\n      return setImage(text);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }), React.createElement(Button, {\n    title: \"Save\",\n    onPress: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["D:/my-app/react-native/components/CreateMovies.js"],"names":["React","useState","CreateMovies","navigation","id","setID","title","setTitle","releaseYear","setReleaseYear","image","setImage","onSubmit","console","log","data","fetch","method","body","JSON","stringify","headers","promise","json","result","navigate","flex","justifyContent","padding","fontSize","color","width","text"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { Text, View, TextInput, Button } from 'react-native';\r\n\r\nexport default function CreateMovies({ navigation }) {\r\n\r\n  const [id, setID] = useState(\"\");\r\n  const [title, setTitle] = useState(\"\");\r\n  const [releaseYear, setReleaseYear] = useState(\"\");\r\n  const [image, setImage] = useState(\"\");\r\n\r\n  const onSubmit = async () => {\r\n    console.log(\"Press Submit !!!\");\r\n    let data = {\r\n      \"id\": id,\r\n      \"title\": title,\r\n      \"releaseYear\": releaseYear,\r\n      \"image\": image,\r\n    };\r\n    console.log(\"Submit : \", data);\r\n    try {\r\n      let promise = await fetch('https://www.csbootstrap.com/api/movies', {\r\n        method: 'POST',\r\n        body: JSON.stringify(data),\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n      });\r\n      let result = await promise.json();\r\n      console.log(\"Result : \", result);\r\n      navigation.navigate('Movies');\r\n    } catch (error) {\r\n      console.log(\"ERROR : \", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View style={{ flex: 1, justifyContent: 'flex-start', padding: 20 }}>\r\n      <Text style={{ fontSize: 20 }}>Create Movies</Text>\r\n      <Text style={{ color: 'red' }}>ID : </Text>\r\n      <TextInput\r\n        style={{ width: '90%', padding: 10 }}\r\n        autoCapitalize=\"none\"\r\n        placeholder=\"fill id with random character ...\"\r\n      />\r\n      <Text style={{ color: 'red' }}>Title : </Text>\r\n      <TextInput\r\n        style={{ width: '90%', padding: 10 }}\r\n        autoCapitalize=\"none\"\r\n        placeholder=\"movie title ...\"\r\n        onChangeText={(text) => setTitle(text)}\r\n      />\r\n      <Text style={{ color: 'red' }}>Release year : </Text>\r\n      <TextInput\r\n        style={{ width: '90%', padding: 10 }}\r\n        autoCapitalize=\"none\"\r\n        placeholder=\"year ...\"\r\n        onChangeText={(text) => setReleaseYear(text)}\r\n      />\r\n      <Text style={{ color: 'red' }}>Image URL :  </Text>\r\n      <TextInput\r\n        style={{ width: '90%', padding: 10 }}\r\n        autoCapitalize=\"none\"\r\n        placeholder=\"URL with https ....\"\r\n        onChangeText={(text) => setImage(text)}\r\n      />\r\n      <Button title=\"Save\" onPress={onSubmit} />\r\n    </View>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}