{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\my-app\\\\react-native\\\\components\\\\Movies.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Item from \"./Item\";\nexport default function Movies() {\n  var _this = this;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      movies = _useState2[0],\n      setMovies = _useState2[1];\n\n  var getMovies = function getMovies() {\n    var promise, data;\n    return _regeneratorRuntime.async(function getMovies$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(fetch('https://www.csbootstrap.com/movies.json'));\n\n          case 3:\n            promise = _context.sent;\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(promise.json());\n\n          case 6:\n            data = _context.sent;\n            setMovies(data.movies);\n            _context.next = 13;\n            break;\n\n          case 10:\n            _context.prev = 10;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(\"ERROR : \", _context.t0);\n\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 10]], Promise);\n  };\n\n  var clear = function clear() {\n    setMovies([]);\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, React.createElement(FlatList, {\n    data: movies,\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(Item, {\n        title: item.title,\n        releaseYear: item.releaseYear,\n        image: item.image,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 15\n        }\n      });\n    },\n    keyExtractor: function keyExtractor(item) {\n      return item.id;\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }), React.createElement(Button, {\n    title: \"Display Movies\",\n    onPress: getMovies,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }), React.createElement(Button, {\n    title: \"Clear\",\n    onPress: clear,\n    color: \"#841584\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'column',\n    justifyContent: 'flex-end',\n    paddingHorizontal: 20,\n    paddingTop: 40\n  }\n});","map":{"version":3,"sources":["D:/my-app/react-native/components/Movies.js"],"names":["React","useState","Item","Movies","movies","setMovies","getMovies","fetch","promise","json","data","console","log","clear","styles","container","item","title","releaseYear","image","id","StyleSheet","create","flex","flexDirection","justifyContent","paddingHorizontal","paddingTop"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;AAEA,OAAOC,IAAP;AACA,eAAe,SAASC,MAAT,GAAkB;AAAA;;AAC/B,kBAA4BF,QAAQ,CAAC,EAAD,CAApC;AAAA;AAAA,MAAOG,MAAP;AAAA,MAAeC,SAAf;;AAEA,MAAMC,SAAS,GAAG,SAAZA,SAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAEMC,KAAK,CAAC,yCAAD,CAFX;;AAAA;AAEVC,YAAAA,OAFU;AAAA;AAAA,6CAGGA,OAAO,CAACC,IAAR,EAHH;;AAAA;AAGVC,YAAAA,IAHU;AAKdL,YAAAA,SAAS,CAACK,IAAI,CAACN,MAAN,CAAT;AALc;AAAA;;AAAA;AAAA;AAAA;AAQdO,YAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;;AARc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAlB;;AAWA,MAAMC,KAAK,GAAG,SAARA,KAAQ,GAAM;AAClBR,IAAAA,SAAS,CAAC,EAAD,CAAT;AACD,GAFD;;AAGA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAES,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AACE,IAAA,IAAI,EAAEX,MADR;AAEE,IAAA,UAAU,EACR,0BAAc;AAAA,UAAXY,IAAW,QAAXA,IAAW;AACZ,aACE,oBAAC,IAAD;AACE,QAAA,KAAK,EAAEA,IAAI,CAACC,KADd;AAEE,QAAA,WAAW,EAAED,IAAI,CAACE,WAFpB;AAGE,QAAA,KAAK,EAAEF,IAAI,CAACG,KAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAOD,KAXL;AAaE,IAAA,YAAY,EAAE,sBAAAH,IAAI;AAAA,aAAIA,IAAI,CAACI,EAAT;AAAA,KAbpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAgBE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,gBAAd;AAA+B,IAAA,OAAO,EAAEd,SAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhBF,EAiBE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,OAAd;AAAsB,IAAA,OAAO,EAAEO,KAA/B;AAAsC,IAAA,KAAK,EAAC,SAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjBF,CADF;AAqBD;AACD,IAAMC,MAAM,GAAGO,UAAU,CAACC,MAAX,CAAkB;AAC/BP,EAAAA,SAAS,EAAE;AACTQ,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,aAAa,EAAE,QAFN;AAGTC,IAAAA,cAAc,EAAE,UAHP;AAITC,IAAAA,iBAAiB,EAAE,EAJV;AAKTC,IAAAA,UAAU,EAAE;AALH;AADoB,CAAlB,CAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport { StyleSheet, View, FlatList, Button } from 'react-native';\r\nimport Item from './Item';\r\nexport default function Movies() {\r\n  const [movies, setMovies] = useState([]);\r\n\r\n  const getMovies = async () => {\r\n    try {\r\n      let promise = await fetch('https://www.csbootstrap.com/movies.json');\r\n      let data = await promise.json();\r\n      // console.log(\"Data : \", data);\r\n      setMovies(data.movies);\r\n\r\n    } catch (error) {\r\n      console.log(\"ERROR : \", error);\r\n    }\r\n  }\r\n  const clear = () => {\r\n    setMovies([]);\r\n  }\r\n  return (\r\n    <View style={styles.container}>\r\n      <FlatList\r\n        data={movies}\r\n        renderItem={\r\n          ({ item }) => {\r\n            return (\r\n              <Item\r\n                title={item.title}\r\n                releaseYear={item.releaseYear}\r\n                image={item.image}\r\n              />\r\n            );\r\n          }\r\n        }\r\n        keyExtractor={item => item.id}\r\n      />\r\n      <Button title=\"Display Movies\" onPress={getMovies} />\r\n      <Button title=\"Clear\" onPress={clear} color=\"#841584\" />\r\n    </View >\r\n  )\r\n}\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    flexDirection: 'column',\r\n    justifyContent: 'flex-end',\r\n    paddingHorizontal: 20,\r\n    paddingTop: 40\r\n  },\r\n});"]},"metadata":{},"sourceType":"module"}